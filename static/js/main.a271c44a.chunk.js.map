{"version":3,"sources":["pages/HighScoresPage/HighScoresPage.module.css","components/GuessRow/GuessRow.module.css","components/ColorPicker/ColorPicker.module.css","components/GuessPeg/GuessPeg.module.css","components/ScoreButton/ScoreButton.module.css","components/GameBoard/GameBoard.module.css","components/GameTimer/GameTimer.module.css","components/GuessPeg/GuessPeg.jsx","components/GuessPegs/GuessPegs.jsx","components/GuessScore/GuessScore.jsx","components/ScoreButton/ScoreButton.jsx","components/GuessRow/GuessRow.jsx","components/GameBoard/GameBoard.jsx","components/ColorPicker/ColorPicker.jsx","components/GameTimer/GameTimer.jsx","components/NewGameButton/NewGameButton.jsx","components/NavBar/NavBar.jsx","pages/GamePage/GamePage.jsx","pages/SettingsPage/SettingsPage.jsx","utils/tokenService.js","utils/scoresService.js","pages/HighScoresPage/HighScoresPage.jsx","utils/utilities.js","utils/userService.js","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","pages/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","GuessPeg","props","className","styles","peg","style","backgroundColor","color","border","cursor","currentGuess","onClick","handlePegClick","GuessPegs","colors","code","GuessScore","score","scores","repeat","perfect","almost","split","baseStyle","width","height","margin","borderRadius","pegStyles","borderColor","map","idx","key","ScoreButton","button","disabled","handleScoreClick","GuessRow","rowNum","rowIdx","guess","includes","GameBoard","guesses","length","ColorPicker","selColorIdx","handleColorSelection","GameTimer","handleTick","isTiming","handleTimerUpdate","this","timerId","setInterval","clearInterval","seconds","mins","Math","floor","toString","padStart","secs","formatTime","elapsedTime","Component","NewGameButton","handleNewGameClick","NavBar","nav","user","to","handleLogout","name","GamePage","winTries","SettingsPage","selectedLevelStyle","levels","Object","keys","colorsLookup","level","difficulty","handleDifficultyChange","history","push","getToken","token","localStorage","getItem","JSON","parse","atob","exp","Date","now","removeItem","setToken","setItem","removeToken","getUserFromToken","index","fetch","then","res","json","create","options","method","headers","tokenService","body","stringify","HighScoresPage","scoresService","handleUpdateScores","scoreRows","initials","numGuesses","HighScores","table","cancel","signup","BASE_URL","Headers","ok","Error","getUser","logout","login","creds","SignupForm","state","email","password","passwordConf","handleChange","e","updateMessage","setState","target","value","handleSubmit","a","preventDefault","userService","handleSignupOrLogin","message","onSubmit","type","placeholder","onChange","isFormInvalid","SignupPage","msg","LoginPage","pw","Easy","Moderate","Difficult","App","isHighScore","guessesCopy","lastScore","curState","colorIdx","getInitialState","pegIdx","currentGuessIdx","guessCopy","codeCopy","guessCodeCopy","secretCodeCopy","forEach","foundIdx","indexOf","scoreCopy","prompt","substr","getNewGuess","genCode","numColors","Array","fill","dummy","random","lastGuess","getWinTries","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,WAAa,mCAAmC,OAAS,+BAA+B,MAAQ,gC,iBCAlHD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,2B,gBCAjED,EAAOC,QAAU,CAAC,YAAc,iCAAiC,OAAS,8B,qBCA1ED,EAAOC,QAAU,CAAC,IAAM,wB,gBCAxBD,EAAOC,QAAU,CAAC,OAAS,8B,gBCA3BD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,UAAY,+B,2YCcfC,EAZE,SAACC,GAAD,OACf,yBACEC,UAAWC,IAAOC,IAClBC,MAAO,CACLC,gBAAiBL,EAAMM,MACvBC,OAAQP,EAAMM,MAAN,oBAA2BN,EAAMM,OAAS,kBAClDE,OAAQR,EAAMS,cAAgB,WAEhCC,QAASV,EAAMS,aAAeT,EAAMW,eAAiB,QCkB1CC,G,MAzBG,SAACZ,GAAD,OAChB,yBAAKC,UAAU,aACb,kBAAC,EAAD,CACEK,MAAON,EAAMa,OAAOb,EAAMc,KAAK,IAC/BL,aAAcT,EAAMS,aACpBE,eAAgB,kBAAMX,EAAMW,eAAe,MAE7C,kBAAC,EAAD,CACEL,MAAON,EAAMa,OAAOb,EAAMc,KAAK,IAC/BL,aAAcT,EAAMS,aACpBE,eAAgB,kBAAMX,EAAMW,eAAe,MAE7C,kBAAC,EAAD,CACEL,MAAON,EAAMa,OAAOb,EAAMc,KAAK,IAC/BL,aAAcT,EAAMS,aACpBE,eAAgB,kBAAMX,EAAMW,eAAe,MAE7C,kBAAC,EAAD,CACEL,MAAON,EAAMa,OAAOb,EAAMc,KAAK,IAC/BL,aAAcT,EAAMS,aACpBE,eAAgB,kBAAMX,EAAMW,eAAe,SCiBlCI,G,MAtCI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChBC,GAAU,IAAIC,OAAOF,EAAMG,SAAW,IAAID,OAAOF,EAAMI,QACzD,IAAIF,OAAO,EAAIF,EAAMG,QAAUH,EAAMI,SAASC,MAAM,IAElDC,EAAY,CACdC,MAAO,GACPC,OAAQ,GACRC,OAAQ,EACRlB,OAAQ,YACRmB,aAAc,OAGZC,EAAY,CACd,EAAK,CACHC,YAAa,QACbvB,gBAAiB,SAEnB,EAAK,CACHuB,YAAa,QACbvB,gBAAiB,SAEnB,EAAK,CACHuB,YAAa,QACbvB,gBAAiB,cAIrB,OACE,yBAAKJ,UAAU,cACZgB,EAAOY,KAAI,SAACb,EAAOc,GAAR,OACV,yBACEC,IAAKD,EACL1B,MAAK,2BAAMkB,GAAcK,EAAUX,Y,iBCtB9BgB,EAVK,SAAChC,GAAD,OAClB,4BACEC,UAAS,UAAKC,IAAO+B,OAAZ,oBACTC,SAAUlC,EAAMkC,SAChBxB,QAASV,EAAMmC,kBAHjB,W,iBC2BaC,EAzBE,SAACpC,GAAD,OACf,yBAAKC,UAAWC,IAAOkC,UACrB,yBACEnC,UAAWC,IAAOmC,OAClBjC,MAAO,CAACE,MAAON,EAAMS,aAAe,QAAU,cAE7CT,EAAMsC,OAAS,GAElB,kBAAC,EAAD,CACEzB,OAAQb,EAAMa,OACdC,KAAMd,EAAMuC,MAAMzB,KAClBL,aAAcT,EAAMS,aACpBE,eAAgBX,EAAMW,iBAGtBX,EAAMS,cAA8C,IAA9BT,EAAMuC,MAAMvB,MAAMG,QACtC,kBAAC,EAAD,CACEe,SAAUlC,EAAMuC,MAAMzB,KAAK0B,SAAS,MACpCL,iBAAkBnC,EAAMmC,mBAE1B,kBAAC,EAAD,CAAYnB,MAAOhB,EAAMuC,MAAMvB,U,iBCNxByB,EAhBG,SAACzC,GAAD,OAChB,yBAAKC,UAAWC,IAAOuC,WACpBzC,EAAM0C,QAAQb,KAAI,SAACU,EAAOT,GAAR,OACjB,kBAAC,EAAD,CACES,MAAOA,EACP1B,OAAQb,EAAMa,OACdyB,OAAQR,EACRrB,aAAcqB,IAAS9B,EAAM0C,QAAQC,OAAS,EAC9ChC,eAAgBX,EAAMW,eACtBwB,iBAAkBnC,EAAMmC,iBACxBJ,IAAKD,S,iBCKEc,EAhBK,SAAC5C,GAAD,OAClB,yBAAKC,UAAWC,IAAO0C,aACpB5C,EAAMa,OAAOgB,KAAI,SAACvB,EAAOwB,GAAR,OAChB,4BACEC,IAAKzB,EACLL,UAAWC,IAAO+B,OAClB7B,MAAO,CACLC,gBAAiBL,EAAM6C,cAAgBf,EAAM,QAAUxB,EACvDsB,YAAatB,GAEfI,QAAS,kBAAMV,EAAM8C,qBAAqBhB,W,qBCuBnCiB,E,4MAzBbC,WAAa,WAEN,EAAKhD,MAAMiD,UAChB,EAAKjD,MAAMkD,qB,kEAMXC,KAAKC,QAAUC,YAAYF,KAAKH,WAAY,O,6CAI5CM,cAAcH,KAAKC,W,+BAInB,OACE,yBAAKnD,UAAS,UAAKC,IAAO6C,UAAZ,YA1BpB,SAAoBQ,GAClB,IAAIC,EAAOC,KAAKC,MAAMH,EAAU,IAAII,WAAWC,SAAS,EAAG,KACvDC,GAAQN,EAAU,IAAII,WAAWC,SAAS,EAAG,KACjD,MAAM,GAAN,OAAUJ,EAAV,YAAkBK,GAwBXC,CAAWX,KAAKnD,MAAM+D,kB,GArBPC,aCETC,EATO,SAACjE,GAAD,OACpB,4BACEC,UAAU,kBACVS,QAASV,EAAMkE,oBAFjB,aCuBaC,G,MAtBA,SAACnE,GACd,IAAIoE,EAAMpE,EAAMqE,KACd,6BACE,kBAAC,IAAD,CAAMC,GAAG,eAAerE,UAAU,eAAlC,eADF,wBAGE,kBAAC,IAAD,CAAMqE,GAAG,GAAGrE,UAAU,cAAcS,QAASV,EAAMuE,cAAnD,WAHF,8BAIE,0BAAMtE,UAAU,kBAAhB,YAA2CD,EAAMqE,KAAKG,OAGxD,6BACE,kBAAC,IAAD,CAAMF,GAAG,SAASrE,UAAU,eAA5B,UADF,oBAGE,kBAAC,IAAD,CAAMqE,GAAG,UAAUrE,UAAU,eAA7B,YAGJ,OACE,yBAAKA,UAAU,UACZmE,KCuBQK,G,MAnCE,SAACzE,GAChB,OACE,yBAAKC,UAAU,YACb,kBAAC,EAAD,CAAQoE,KAAMrE,EAAMqE,KAAME,aAAcvE,EAAMuE,eAC9C,yBAAKtE,UAAU,yBACb,kBAAC,EAAD,CACEY,OAAQb,EAAMa,OACd6B,QAAS1C,EAAM0C,QACf/B,eAAgBX,EAAMW,eACtBwB,iBAAkBnC,EAAMmC,mBAE1B,yBAAKlC,UAAU,qBACb,kBAAC,EAAD,CACEY,OAAQb,EAAMa,OACdgC,YAAa7C,EAAM6C,YACnBC,qBAAsB9C,EAAM8C,uBAE9B,kBAAC,EAAD,CACEiB,YAAa/D,EAAM+D,YACnBb,kBAAmBlD,EAAMkD,kBACzBD,SAAUjD,EAAMiD,WAElB,kBAAC,IAAD,CAAMhD,UAAU,uCAAuCqE,GAAG,gBAA1D,eACA,kBAAC,IAAD,CAAMrE,UAAU,uCAAuCqE,GAAG,aAA1D,cACA,kBAAC,EAAD,CAAeJ,mBAAoBlE,EAAMkE,uBAG7C,4BAAQjE,UAAU,iBACdD,EAAM0E,SAAN,qBAA+B1E,EAAM0E,SAArC,aAA2D,iBCetDC,G,MAhDM,SAAC3E,GAEpB,IAAM4E,EAAqB,CACzBrE,OAAQ,kBAQV,IAEMsE,EAFYC,OAAOC,KAAK/E,EAAMgF,cAEXnD,KAAI,SAAAoD,GAAK,OAChC,yBAAKhF,UAAU,qBAAqB8B,IAAKkD,GACvC,4BAAQhF,UAAU,qCAChBG,MAAO6E,IAAUjF,EAAMkF,WAAaN,EAAqB,KACzD1C,SAAU+C,IAAUjF,EAAMkF,WAC1BxE,QAAS,kBAZf,SAAgCuE,GAC9BjF,EAAMmF,uBAAuBF,GAC7BjF,EAAMoF,QAAQC,KAAK,KAUAF,CAAuBF,KAErCA,GAEH,yBAAKhF,UAAU,yBACZD,EAAMgF,aAAaC,GAAOpD,KAAI,SAAAvB,GAAK,OAClC,yBACEL,UAAU,iBACVG,MAAO,CAACC,gBAAiBC,GACzByB,IAAKzB,YAOf,OACE,yBAAKL,UAAU,YACb,4BAAQA,UAAU,iBAAlB,wBACA,6BACG4E,GAEH,6BACE,kBAAC,IAAD,CAAM5E,UAAU,yCAAyCqE,GAAG,KAA5D,c,iBCzCR,SAASgB,IACP,IAAIC,EAAQC,aAAaC,QAAQ,SAC7BF,IAEcG,KAAKC,MAAMC,KAAKL,EAAMlE,MAAM,KAAK,KAErCwE,IAAMC,KAAKC,MAAQ,MAC7BP,aAAaQ,WAAW,SACxBT,EAAQ,OAGZ,OAAOA,EAYM,OACbU,SA5BF,SAAkBV,GAChBC,aAAaU,QAAQ,QAASX,IA4B9BD,WACAa,YAPF,WACEX,aAAaQ,WAAW,UAOxBI,iBAbF,WACE,IAAMb,EAAQD,IACd,OAAOC,EAAQG,KAAKC,MAAMC,KAAKL,EAAMlE,MAAM,KAAK,KAAKgD,KAAO,OChB/C,GACbgC,MAIF,WACE,OAAOC,MARQ,gBAQQC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAJvCC,OAOF,SAAgB1F,GACd,IAAM2F,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAiB,UAAYC,EAAaxB,YAE5CyB,KAAMrB,KAAKsB,UAAUhG,IAEvB,OAAOsF,MApBQ,eAoBQK,GAASJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,Y,ICyBnCQ,E,kTAtCUC,EAAcb,Q,OAA7BpF,E,OACNkC,KAAKnD,MAAMmH,mBAAmBlG,G,qIAI9B,IAAMmG,EAAYjE,KAAKnD,MAAMiB,OAAOY,KAAI,SAACb,EAAOc,GAAR,OACtC,wBAAIC,IAAKD,GACP,4BAAI,0BAAM7B,UAAU,SAAS6B,EAAM,IACnC,4BAAKd,EAAMqG,UACX,4BAAKrG,EAAMsG,YACX,4BCnBD,SAAoB/D,GACzB,IAAMC,EAAOC,KAAKC,MAAMH,EAAU,IAAII,WAAWC,SAAS,EAAG,KACvDC,GAAQN,EAAU,IAAII,WAAWC,SAAS,EAAG,KACnD,MAAM,GAAN,OAAUJ,EAAV,YAAkBK,GDgBPC,CAAW9C,EAAMuC,cAI1B,OACE,yBAAKtD,UAAWC,IAAOqH,YACrB,4BAAQtH,UAAU,iBAAlB,eACCkD,KAAKnD,MAAMiB,OAAO0B,OACjB,2BAAO1C,UAAS,UAAKC,IAAOsH,MAAZ,qBACd,+BACE,4BAAI,wBAAIjG,MAAO,IAAX,KAAqB,wBAAIA,MAAO,KAAX,YAA6B,wBAAIA,MAAO,KAAX,WAA4B,yCAEpF,+BACG6F,IAIL,wBAAInH,UAAU,aAAd,sBAEF,6BACE,kBAAC,IAAD,CAAMA,UAAS,UAAKC,IAAOuH,OAAZ,2BAA6CnD,GAAG,KAA/D,sB,GAjCmBN,aEsCd,OACb0D,OA1CF,SAAgBrD,GACd,OAAOiC,MAAMqB,oBAAqB,CAChCf,OAAQ,OACRC,QAAS,IAAIe,QAAQ,CAAE,eAAgB,qBACvCb,KAAMrB,KAAKsB,UAAU3C,KAEpBkC,MAAK,SAAAC,GACJ,GAAIA,EAAIqB,GAAI,OAAOrB,EAAIC,OACvB,MAAM,IAAIqB,MAAM,2BAMjBvB,MAAK,YAAgB,IAAbhB,EAAY,EAAZA,MACPuB,EAAab,SAASV,OA4B1BwC,QAxBF,WACE,OAAOjB,EAAaV,oBAwBpB4B,OArBF,WACElB,EAAaX,eAqBb8B,MAlBF,SAAeC,GACb,OAAO5B,MAAMqB,mBAAoB,CAC/Bf,OAAQ,OACRC,QAAS,IAAIe,QAAQ,CAAE,eAAgB,qBACvCb,KAAMrB,KAAKsB,UAAUkB,KAEpB3B,MAAK,SAAAC,GAEJ,GAAIA,EAAIqB,GAAI,OAAOrB,EAAIC,OACvB,MAAM,IAAIqB,MAAM,uBAEjBvB,MAAK,gBAAGhB,EAAH,EAAGA,MAAH,OAAeuB,EAAab,SAASV,QCmChC4C,E,4MAtEbC,MAAQ,CACN5D,KAAM,GACN6D,MAAO,GACPC,SAAU,GACVC,aAAc,I,EAGhBC,aAAe,SAACC,GACd,EAAKzI,MAAM0I,cAAc,IACzB,EAAKC,SAAS,CAEZ,CAACF,EAAEG,OAAOpE,MAAOiE,EAAEG,OAAOC,S,EAI9BC,a,uCAAe,WAAOL,GAAP,SAAAM,EAAA,6DACbN,EAAEO,iBADW,kBAGLC,EAAYvB,OAAO,EAAKU,OAHnB,OAKX,EAAKpI,MAAMkJ,sBAEX,EAAKlJ,MAAMoF,QAAQC,KAAK,KAPb,gDAUX,EAAKrF,MAAM0I,cAAc,KAAIS,SAVlB,yD,oHAeb,QAAShG,KAAKiF,MAAM5D,MAAQrB,KAAKiF,MAAMC,OAASlF,KAAKiF,MAAME,WAAanF,KAAKiF,MAAMG,gB,+BAInF,OACE,6BACE,4BAAQtI,UAAU,iBAAlB,WACA,0BAAMA,UAAU,kBAAkBmJ,SAAUjG,KAAK2F,cAC/C,yBAAK7I,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOoJ,KAAK,OAAOpJ,UAAU,eAAeqJ,YAAY,OAAOT,MAAO1F,KAAKiF,MAAM5D,KAAMA,KAAK,OAAO+E,SAAUpG,KAAKqF,iBAGtH,yBAAKvI,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOoJ,KAAK,QAAQpJ,UAAU,eAAeqJ,YAAY,QAAQT,MAAO1F,KAAKiF,MAAMC,MAAO7D,KAAK,QAAQ+E,SAAUpG,KAAKqF,iBAG1H,yBAAKvI,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOoJ,KAAK,WAAWpJ,UAAU,eAAeqJ,YAAY,WAAWT,MAAO1F,KAAKiF,MAAME,SAAU9D,KAAK,WAAW+E,SAAUpG,KAAKqF,iBAGtI,yBAAKvI,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOoJ,KAAK,WAAWpJ,UAAU,eAAeqJ,YAAY,mBAAmBT,MAAO1F,KAAKiF,MAAMG,aAAc/D,KAAK,eAAe+E,SAAUpG,KAAKqF,iBAGtJ,yBAAKvI,UAAU,cACb,yBAAKA,UAAU,yBACb,4BAAQA,UAAU,kBAAkBiC,SAAUiB,KAAKqG,iBAAnD,WADF,WAEE,kBAAC,IAAD,CAAMlF,GAAG,KAAT,kB,GA/DWN,aCoBVyF,G,wDAnBb,WAAYzJ,GAAQ,IAAD,8BACjB,cAAMA,IAIR0I,cAAgB,SAACgB,GACf,EAAKf,SAAS,CAACQ,QAASO,KAJxB,EAAKtB,MAAQ,CAACe,QAAS,IAFN,E,qDAUjB,OACE,yBAAKlJ,UAAU,cACb,kBAAC,EAAD,iBAAgBkD,KAAKnD,MAArB,CAA4B0I,cAAevF,KAAKuF,iBAChD,2BAAIvF,KAAKiF,MAAMe,c,GAdEnF,cCwDV2F,G,kNArDbvB,MAAQ,CACNC,MAAO,GACPuB,GAAI,I,EAGNpB,aAAe,SAACC,GACd,EAAKE,SAAS,CAEZ,CAACF,EAAEG,OAAOpE,MAAOiE,EAAEG,OAAOC,S,EAI9BC,a,uCAAe,WAAOL,GAAP,SAAAM,EAAA,6DACbN,EAAEO,iBADW,kBAGLC,EAAYhB,MAAM,EAAKG,OAHlB,OAKX,EAAKpI,MAAMkJ,sBAEX,EAAKlJ,MAAMoF,QAAQC,KAAK,KAPb,yG,6GAeb,OACE,yBAAKpF,UAAU,aACb,4BAAQA,UAAU,iBAAlB,UACA,0BAAMA,UAAU,kBAAkBmJ,SAAUjG,KAAK2F,cAC/C,yBAAK7I,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOoJ,KAAK,QAAQpJ,UAAU,eAAeqJ,YAAY,QAAQT,MAAO1F,KAAKiF,MAAMC,MAAO7D,KAAK,QAAQ+E,SAAUpG,KAAKqF,iBAG1H,yBAAKvI,UAAU,cACb,yBAAKA,UAAU,aACb,2BAAOoJ,KAAK,WAAWpJ,UAAU,eAAeqJ,YAAY,WAAWT,MAAO1F,KAAKiF,MAAMwB,GAAIpF,KAAK,KAAK+E,SAAUpG,KAAKqF,iBAG1H,yBAAKvI,UAAU,cACb,yBAAKA,UAAU,yBACb,4BAAQA,UAAU,mBAAlB,UADF,eAEE,kBAAC,IAAD,CAAMqE,GAAG,KAAT,kB,GA9CUN,cCMlBnD,EAAS,CACbgJ,KAAM,CAAC,UAAW,UAAW,UAAW,WACxCC,SAAU,CAAC,UAAW,UAAW,UAAW,UAAW,WACvDC,UAAW,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,YA8OtDC,E,kDA1Ob,aAAe,IAAD,8BACZ,gBAQFzF,aAAe,WACb0E,EAAYjB,SACZ,EAAKW,SAAS,CAAEtE,KAAM,QAXV,EAad6E,oBAAsB,WACpB,EAAKP,SAAS,CAAEtE,KAAM4E,EAAYlB,aAdtB,EAgDdkC,YAAc,SAACC,GACb,IAAIC,EAAY,EAAK/B,MAAMnH,OAAO,EAAKmH,MAAMnH,OAAO0B,OAAS,GAC7D,OAAQuH,EAAYvH,OAASwH,EAAU7C,YACrC4C,EAAYvH,SAAWwH,EAAU7C,YACjC,EAAKc,MAAMrE,YAAcoG,EAAU5G,SApDzB,EA0DdL,kBAAoB,WAClB,EAAKyF,UAAS,SAACyB,GAAD,MAAe,CAAErG,cAAeqG,EAASrG,iBA3D3C,EA8DdoB,uBAAyB,SAACF,GAExB,EAAK0D,SAAS,CAAEzD,WAAYD,IAAS,kBAAM,EAAKf,yBAhEpC,EAmEdpB,qBAAuB,SAACuH,GACtB,EAAK1B,SAAS,CAAE9F,YAAawH,KApEjB,EAuEdnG,mBAAqB,WACnB,EAAKyE,SAAS,EAAK2B,oBAxEP,EA2Ed3J,eAAiB,SAAC4J,GAEhB,IAAIC,EAAkB,EAAKpC,MAAM1F,QAAQC,OAAS,EAG9CuH,EAAW,YAAO,EAAK9B,MAAM1F,SAC7B+H,EAAS,eAAQP,EAAYM,IAC7BE,EAAQ,YAAOD,EAAU3J,MAG7B4J,EAASH,GAAU,EAAKnC,MAAMvF,YAG9B4H,EAAU3J,KAAO4J,EAGjBR,EAAYM,GAAmBC,EAG/B,EAAK9B,SAAS,CACZjG,QAASwH,KA/FC,EAmGd/H,iBAAmB,WAEjB,IAAIqI,EAAkB,EAAKpC,MAAM1F,QAAQC,OAAS,EAK9CgI,EAAa,YAAO,EAAKvC,MAAM1F,QAAQ8H,GAAiB1J,MACxD8J,EAAc,YAAO,EAAKxC,MAAMtH,MAEhCK,EAAU,EAAGC,EAAS,EAG1BuJ,EAAcE,SAAQ,SAAC/J,EAAMgB,GACvB8I,EAAe9I,KAAShB,IAC1BK,IAIAwJ,EAAc7I,GAAO8I,EAAe9I,GAAO,SAK/C6I,EAAcE,SAAQ,SAAC/J,EAAMgB,GAC3B,GAAa,OAAThB,EAAJ,CACA,IAAIgK,EAAWF,EAAeG,QAAQjK,GAClCgK,GAAY,IACd1J,IAEAwJ,EAAeE,GAAY,UAM/B,IAAIZ,EAAW,YAAO,EAAK9B,MAAM1F,SAC7B+H,EAAS,eAAQP,EAAYM,IAC7BQ,EAAS,eAAQP,EAAUzJ,OAE/BgK,EAAU7J,QAAUA,EACpB6J,EAAU5J,OAASA,EACnBqJ,EAAUzJ,MAAQgK,EAClBd,EAAYM,GAAmBC,EAEf,IAAZtJ,EAEF,EAAKwH,UAAS,SAAAP,GAAK,MAAK,CAAEnF,UAAU,KAApC,sBAA8C,4BAAA8F,EAAA,2DAEvC5F,KAAKiF,MAAMnH,OAAO0B,OAAS,IAAMQ,KAAK8G,YAAYC,IAFX,uBAGtC7C,EAAW4D,OAAO,2DAA2DC,OAAO,EAAG,GAHjD,SAIpChE,EAAcR,OAAO,CAAEW,WAAUC,WAAY4C,EAAYvH,OAAQY,QAASJ,KAAKiF,MAAMrE,cAJjD,OAK1CZ,KAAKnD,MAAMoF,QAAQC,KAAK,gBALkB,iDAS9C6E,EAAY7E,KAAK,EAAK8F,eAGxB,EAAKxC,SAAS,CACZjG,QAASwH,EAETjH,SAAsB,IAAZ9B,KAjKA,EAqKdgG,mBAAqB,SAAClG,GACpB,EAAK0H,SAAS,CAAE1H,YApKhB,EAAKmH,MAAL,2BACK,EAAKkC,mBADV,IAEEpF,WAAY,OACZjE,OAAQ,GACRoD,KAAM4E,EAAYlB,YANR,E,8DAiBZ,MAAO,CACLlF,YAAa,EACbH,QAAS,CAACS,KAAKgI,eACfrK,KAAMqC,KAAKiI,UACXrH,YAAa,EACbd,UAAU,K,oCAKZ,MAAO,CACLnC,KAAM,CAAC,KAAM,KAAM,KAAM,MACzBE,MAAO,CACLG,QAAS,EACTC,OAAQ,M,gCAMZ,IAAIiK,EAAYlI,KAAKiF,OAASvH,EAAOsC,KAAKiF,MAAMlD,YAAYvC,OAE5D,OADA0I,EAAYA,GAAa,EAClB,IAAIC,MAAM,GAAGC,OAAO1J,KAAI,SAAA2J,GAAK,OAAI/H,KAAKC,MAAMD,KAAKgI,SAAWJ,Q,oCAKnE,IAAIK,EAAYvI,KAAKiF,MAAM1F,QAAQC,OAAS,EAC5C,OAAuD,IAAhDQ,KAAKiF,MAAM1F,QAAQgJ,GAAW1K,MAAMG,QAAgBuK,EAAY,EAAI,I,0KA+HtDxE,EAAcb,Q,OAA7BpF,E,OACNkC,KAAKwF,SAAS,CAAE1H,W,qIAGR,IAAD,OACHyD,EAAWvB,KAAKwI,cACpB,OACE,6BACE,4BAAQ1L,UAAU,iBAAlB,+CACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2L,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAC5B,kBAAC,EAAD,CACEzH,KAAM,EAAK+D,MAAM/D,KACjBE,aAAc,EAAKA,aACnBG,SAAUA,EACV7D,OAAQA,EAAO,EAAKuH,MAAMlD,YAC1BrC,YAAa,EAAKuF,MAAMvF,YACxBH,QAAS,EAAK0F,MAAM1F,QACpBqB,YAAa,EAAKqE,MAAMrE,YACxBd,SAAU,EAAKmF,MAAMnF,SACrBH,qBAAsB,EAAKA,qBAC3BoB,mBAAoB,EAAKA,mBACzBvD,eAAgB,EAAKA,eACrBwB,iBAAkB,EAAKA,iBACvBe,kBAAmB,EAAKA,uBAG5B,kBAAC,IAAD,CAAO0I,OAAK,EAACC,KAAK,YAAYC,OAAQ,SAAA9L,GAAK,OACzC,kBAAC,EAAD,iBACMA,EADN,CAEEgF,aAAcnE,EACdqE,WAAY,EAAKkD,MAAMlD,WACvBC,uBAAwB,EAAKA,6BAGjC,kBAAC,IAAD,CAAOyG,OAAK,EAACC,KAAK,UAAUC,OAAQ,gBAAG1G,EAAH,EAAGA,QAAH,OAClC,kBAAC,EAAD,CACEA,QAASA,EACT8D,oBAAqB,EAAKA,yBAI9B,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,SAASC,OAAQ,SAAC9L,GAAD,OACjC,kBAAC,EAAD,eACEkJ,oBAAqB,EAAKA,qBACtBlJ,OAKR,kBAAC,IAAD,CAAO4L,OAAK,EAACC,KAAK,eAAeC,OAAQ,kBACvC,kBAAC,EAAD,CACE7K,OAAQ,EAAKmH,MAAMnH,OACnBkG,mBAAoB,EAAKA,8B,GAlOrBnD,aCLE+H,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASN,OACP,kBAAC,IAAD,KAAQ,kBAAC,IAAD,CAAOO,UAAWrC,KAC1BsC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnG,MAAK,SAAAoG,GACjCA,EAAaC,kB","file":"static/js/main.a271c44a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"HighScores\":\"HighScoresPage_HighScores__3sYMT\",\"cancel\":\"HighScoresPage_cancel__qIomG\",\"table\":\"HighScoresPage_table__2i4zV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GuessRow\":\"GuessRow_GuessRow__2qaqh\",\"rowNum\":\"GuessRow_rowNum__1aazo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ColorPicker\":\"ColorPicker_ColorPicker__3td2f\",\"button\":\"ColorPicker_button__WR1U7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"peg\":\"GuessPeg_peg__3ebx1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ScoreButton_button__3BUpB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameBoard\":\"GameBoard_GameBoard__XFLQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameTimer\":\"GameTimer_GameTimer__2GSvv\"};","import React from 'react';\r\nimport styles from './GuessPeg.module.css';\r\n\r\nconst GuessPeg = (props) => (\r\n  <div\r\n    className={styles.peg}\r\n    style={{\r\n      backgroundColor: props.color,\r\n      border: props.color ? `1px solid ${props.color}`: '1px dashed grey',\r\n      cursor: props.currentGuess && 'pointer'\r\n    }}\r\n    onClick={props.currentGuess ? props.handlePegClick : null}\r\n  />\r\n);\r\n\r\nexport default GuessPeg;\r\n","import React from 'react';\r\nimport GuessPeg from '../GuessPeg/GuessPeg';\r\nimport './GuessPegs.css';\r\n\r\nconst GuessPegs = (props) => (\r\n  <div className='GuessPegs'>\r\n    <GuessPeg\r\n      color={props.colors[props.code[0]]}\r\n      currentGuess={props.currentGuess}\r\n      handlePegClick={() => props.handlePegClick(0)}\r\n    />\r\n    <GuessPeg\r\n      color={props.colors[props.code[1]]}\r\n      currentGuess={props.currentGuess}\r\n      handlePegClick={() => props.handlePegClick(1)}\r\n    />\r\n    <GuessPeg\r\n      color={props.colors[props.code[2]]}\r\n      currentGuess={props.currentGuess}\r\n      handlePegClick={() => props.handlePegClick(2)}\r\n    />\r\n    <GuessPeg\r\n      color={props.colors[props.code[3]]}\r\n      currentGuess={props.currentGuess}\r\n      handlePegClick={() => props.handlePegClick(3)}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default GuessPegs;\r\n","import React from 'react';\r\nimport './GuessScore.css';\r\n\r\nconst GuessScore = ({ score }) => {\r\n  let scores = ('P'.repeat(score.perfect) + 'A'.repeat(score.almost) +\r\n    'I'.repeat(4 - score.perfect - score.almost)).split('');\r\n  \r\n  let baseStyle = {\r\n    width: 10,\r\n    height: 10,\r\n    margin: 1,\r\n    border: '2px solid',\r\n    borderRadius: '50%'\r\n  };\r\n\r\n  let pegStyles = {\r\n    'P': {\r\n      borderColor: 'black',\r\n      backgroundColor: 'black'\r\n    },\r\n    'A': {\r\n      borderColor: 'black',\r\n      backgroundColor: 'white'\r\n    },\r\n    'I': {\r\n      borderColor: 'white',\r\n      backgroundColor: 'lightgrey'\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className='GuessScore'>\r\n      {scores.map((score, idx) =>\r\n        <div\r\n          key={idx}\r\n          style={{...baseStyle, ...pegStyles[score]}} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GuessScore;\r\n","import React from 'react';\r\nimport styles from './ScoreButton.module.css';\r\n\r\nconst ScoreButton = (props) => (\r\n  <button\r\n    className={`${styles.button} btn btn-default`}\r\n    disabled={props.disabled}\r\n    onClick={props.handleScoreClick}\r\n  >\r\n    ✔\r\n  </button>\r\n);\r\n\r\nexport default ScoreButton;\r\n","import React from 'react';\r\nimport GuessPegs from '../GuessPegs/GuessPegs';\r\nimport GuessScore from '../GuessScore/GuessScore';\r\nimport ScoreButton from '../ScoreButton/ScoreButton';\r\nimport styles from './GuessRow.module.css';\r\n\r\nconst GuessRow = (props) => (\r\n  <div className={styles.GuessRow}>\r\n    <div\r\n      className={styles.rowNum}\r\n      style={{color: props.currentGuess ? 'black' : 'lightgrey'}}\r\n    >\r\n      {props.rowIdx + 1}\r\n    </div>\r\n    <GuessPegs\r\n      colors={props.colors}\r\n      code={props.guess.code}\r\n      currentGuess={props.currentGuess}\r\n      handlePegClick={props.handlePegClick}\r\n    />\r\n    {\r\n      props.currentGuess && props.guess.score.perfect !== 4 ?\r\n        <ScoreButton\r\n          disabled={props.guess.code.includes(null)}\r\n          handleScoreClick={props.handleScoreClick}\r\n        /> :\r\n        <GuessScore score={props.guess.score} />\r\n    }\r\n  </div>\r\n);\r\n\r\nexport default GuessRow;\r\n","import React from 'react';\r\nimport GuessRow from '../GuessRow/GuessRow';\r\nimport styles from './GameBoard.module.css';\r\n\r\nconst GameBoard = (props) => (\r\n  <div className={styles.GameBoard}>\r\n    {props.guesses.map((guess, idx) =>\r\n      <GuessRow\r\n        guess={guess}\r\n        colors={props.colors}\r\n        rowIdx={idx}\r\n        currentGuess={idx === (props.guesses.length - 1)}\r\n        handlePegClick={props.handlePegClick}\r\n        handleScoreClick={props.handleScoreClick}\r\n        key={idx}\r\n      />\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default GameBoard;\r\n","import React from 'react';\r\nimport styles from './ColorPicker.module.css';\r\n\r\nconst ColorPicker = (props) => (\r\n  <div className={styles.ColorPicker}>\r\n    {props.colors.map((color, idx) =>\r\n      <button\r\n        key={color}\r\n        className={styles.button}\r\n        style={{\r\n          backgroundColor: props.selColorIdx === idx ? 'white' : color,\r\n          borderColor: color\r\n        }}\r\n        onClick={() => props.handleColorSelection(idx)}\r\n      />\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default ColorPicker;\r\n","import React, { Component } from 'react';\r\nimport styles from './GameTimer.module.css';\r\n\r\nfunction formatTime(seconds) {\r\n  let mins = Math.floor(seconds / 60).toString().padStart(2, '0');\r\n  let secs = (seconds % 60).toString().padStart(2, '0');\r\n  return `${mins}:${secs}`;\r\n}\r\n\r\nclass GameTimer extends Component {\r\n\r\n  handleTick = () => {\r\n    // Ignore ticks?\r\n    if (!this.props.isTiming) return;\r\n    this.props.handleTimerUpdate();\r\n  };\r\n\r\n  /*--- Lifecycle Methods ---*/\r\n\r\n  componentDidMount() {\r\n    this.timerId = setInterval(this.handleTick, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timerId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`${styles.GameTimer} flex-h`}>\r\n        {formatTime(this.props.elapsedTime)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameTimer;\r\n","import React from 'react';\r\n\r\nconst NewGameButton = (props) => (\r\n  <button\r\n    className='btn btn-default'\r\n    onClick={props.handleNewGameClick}\r\n  >\r\n    New Game\r\n  </button>\r\n);\r\n\r\nexport default NewGameButton;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.css';\r\n\r\nconst NavBar = (props) => {\r\n  let nav = props.user ?\r\n    <div>\r\n      <Link to='/high-scores' className='NavBar-link'>HIGH SCORES</Link>\r\n      &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\r\n      <Link to='' className='NavBar-link' onClick={props.handleLogout} >LOG OUT</Link>      &nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\r\n      <span className='NavBar-welcome'>WELCOME, {props.user.name}</span>\r\n    </div>\r\n    :\r\n    <div>\r\n      <Link to='/login' className='NavBar-link'>LOG IN</Link>\r\n      &nbsp;&nbsp;|&nbsp;&nbsp;\r\n      <Link to='/signup' className='NavBar-link'>SIGN UP</Link>\r\n    </div>;\r\n\r\n  return (\r\n    <div className='NavBar'>\r\n      {nav}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport GameBoard from '../../components/GameBoard/GameBoard';\r\nimport ColorPicker from '../../components/ColorPicker/ColorPicker';\r\nimport GameTimer from '../../components/GameTimer/GameTimer';\r\nimport NewGameButton from '../../components/NewGameButton/NewGameButton';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport './GamePage.css';\r\n\r\nconst GamePage = (props) => {\r\n  return (\r\n    <div className=\"GamePage\">\r\n      <NavBar user={props.user} handleLogout={props.handleLogout} />\r\n      <div className=\"flex-h align-flex-end\">\r\n        <GameBoard\r\n          colors={props.colors}\r\n          guesses={props.guesses}\r\n          handlePegClick={props.handlePegClick}\r\n          handleScoreClick={props.handleScoreClick}\r\n        />\r\n        <div className='GamePage-controls'>\r\n          <ColorPicker\r\n            colors={props.colors}\r\n            selColorIdx={props.selColorIdx}\r\n            handleColorSelection={props.handleColorSelection}\r\n          />\r\n          <GameTimer\r\n            elapsedTime={props.elapsedTime}\r\n            handleTimerUpdate={props.handleTimerUpdate}\r\n            isTiming={props.isTiming}\r\n          />\r\n          <Link className='btn btn-default GamePage-link-margin' to='/high-scores'>High Scores</Link>\r\n          <Link className='btn btn-default GamePage-link-margin' to='/settings'>Difficulty</Link>\r\n          <NewGameButton handleNewGameClick={props.handleNewGameClick} />\r\n        </div>\r\n      </div>\r\n      <footer className='header-footer'>\r\n        {(props.winTries ? `You Won in ${props.winTries} Guesses!` : 'Good Luck!')}\r\n      </footer>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default GamePage;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './SettingsPage.css';\r\n\r\nconst SettingsPage = (props) => {\r\n\r\n  const selectedLevelStyle = {\r\n    border: '2px solid #333'\r\n  };\r\n\r\n  function handleDifficultyChange(level) {\r\n    props.handleDifficultyChange(level);\r\n    props.history.push('/');\r\n  }\r\n\r\n  const colorKeys = Object.keys(props.colorsLookup);\r\n\r\n  const levels = colorKeys.map(level => (\r\n    <div className='Settings-level-row' key={level}>\r\n      <button className=\"Settings-level-btn btn btn-default\"\r\n        style={level === props.difficulty ? selectedLevelStyle : null}\r\n        disabled={level === props.difficulty}\r\n        onClick={() => handleDifficultyChange(level)}\r\n      >\r\n        {level}\r\n      </button>\r\n      <div className='Settings-level-colors'>\r\n        {props.colorsLookup[level].map(color => \r\n          <div\r\n            className='Settings-color'\r\n            style={{backgroundColor: color}}\r\n            key={color}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className='Settings'>\r\n      <header className='header-footer'>Set Difficulty Level</header>\r\n      <div>\r\n        {levels}\r\n      </div>\r\n      <div>\r\n        <Link className='Settings-cancel btn btn-default btn-sm' to='/'>Cancel</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default SettingsPage;\r\n","function setToken(token) {\r\n  localStorage.setItem('token', token); //store our token in local storage \r\n}\r\n\r\nfunction getToken() {\r\n  let token = localStorage.getItem('token'); //this is the important one\r\n  if (token) {\r\n    // Check if expired, remove if it is\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\r\n    if (payload.exp < Date.now() / 1000) { //if it expired\r\n      localStorage.removeItem('token');\r\n      token = null;\r\n    }\r\n  }\r\n  return token;\r\n}\r\n\r\nfunction getUserFromToken() {\r\n  const token = getToken();\r\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\r\n}\r\n\r\nfunction removeToken() {\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nexport default {\r\n  setToken,\r\n  getToken,\r\n  removeToken,\r\n  getUserFromToken\r\n};","import tokenService from './tokenService';\r\n\r\nconst BASE_URL = '/api/scores/';\r\n\r\nexport default {\r\n  index,\r\n  create\r\n};\r\n\r\nfunction index() {\r\n  return fetch(BASE_URL).then(res => res.json());\r\n}\r\n\r\nfunction create(score) {\r\n  const options = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-type': 'application/json',\r\n      'Authorization': 'Bearer ' + tokenService.getToken()\r\n    },\r\n    body: JSON.stringify(score)\r\n  };\r\n  return fetch(BASE_URL, options).then(res => res.json());\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styles from './HighScoresPage.module.css';\r\nimport scoresService from '../../utils/scoresService';\r\nimport { formatTime } from '../../utils/utilities';\r\n\r\nclass HighScoresPage extends Component {\r\n\r\n  async componentDidMount() {\r\n    const scores = await scoresService.index();\r\n    this.props.handleUpdateScores(scores);\r\n  }\r\n\r\n  render() {\r\n    const scoreRows = this.props.scores.map((score, idx) => (\r\n      <tr key={idx}>\r\n        <td><span className=\"badge\">{idx + 1}</span></td>\r\n        <td>{score.initials}</td>\r\n        <td>{score.numGuesses}</td>\r\n        <td>{formatTime(score.seconds)}</td>\r\n      </tr>\r\n    ));\r\n  \r\n    return (\r\n      <div className={styles.HighScores}>\r\n        <header className='header-footer'>High Scores</header>\r\n        {this.props.scores.length ? \r\n          <table className={`${styles.table} table text-info`}>\r\n            <thead>\r\n              <tr><th width={80}>#</th><th width={100}>Initials</th><th width={100}>Guesses</th><th>Seconds</th></tr>\r\n            </thead>\r\n            <tbody>\r\n              {scoreRows}\r\n            </tbody>\r\n          </table>\r\n          :\r\n          <h4 className='text-info'>No High Scores Yet</h4>\r\n        }\r\n        <div>\r\n          <Link className={`${styles.cancel} btn btn-default btn-sm`} to='/'>Back to Game</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default HighScoresPage;\r\n","export function formatTime(seconds) {\r\n  const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\r\n  const secs = (seconds % 60).toString().padStart(2, '0');\r\n  return `${mins}:${secs}`;\r\n}","import tokenService from './tokenService';\r\nconst BASE_URL = '/api/users/';\r\n\r\nfunction signup(user) {\r\n  return fetch(BASE_URL + 'signup', { //send request to server\r\n    method: 'POST',\r\n    headers: new Headers({ 'Content-Type': 'application/json' }),\r\n    body: JSON.stringify(user)\r\n  })\r\n    .then(res => {\r\n      if (res.ok) return res.json();\r\n      throw new Error('Email already taken!');\r\n    })\r\n    // Parameter destructuring!\r\n    // .then(({ token }) => token);\r\n    // the above could have been written as\r\n    //.then((token) => token.token);\r\n    .then(({ token }) => {\r\n      tokenService.setToken(token);\r\n    });\r\n}\r\n\r\nfunction getUser() {\r\n  return tokenService.getUserFromToken();\r\n}\r\n\r\nfunction logout() {\r\n  tokenService.removeToken();\r\n}\r\n\r\nfunction login(creds) {\r\n  return fetch(BASE_URL + 'login', {\r\n    method: 'POST',\r\n    headers: new Headers({ 'Content-Type': 'application/json' }),\r\n    body: JSON.stringify(creds)\r\n  })\r\n    .then(res => {\r\n      // Valid login if we have a status of 2xx (res.ok)\r\n      if (res.ok) return res.json();\r\n      throw new Error('Bad Credentials!');\r\n    })\r\n    .then(({ token }) => tokenService.setToken(token));\r\n}\r\n\r\nexport default {\r\n  signup,\r\n  getUser,\r\n  logout,\r\n  login\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport userService from '../../utils/userService';\r\n\r\nclass SignupForm extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConf: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.props.updateMessage('');\r\n    this.setState({\r\n      // Using ES2015 Computed Property Names\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await userService.signup(this.state);\r\n      // Let <App> know a user has signed up!\r\n      this.props.handleSignupOrLogin();\r\n      // Successfully signed up - show GamePage\r\n      this.props.history.push('/');\r\n    } catch (err) {\r\n      // Invalid user data (probably duplicate email)\r\n      this.props.updateMessage(err.message);\r\n    }\r\n  }\r\n\r\n  isFormInvalid() {\r\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <header className=\"header-footer\">Sign Up</header>\r\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12\">\r\n              <input type=\"text\" className=\"form-control\" placeholder=\"Name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12\">\r\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12\">\r\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12\">\r\n              <input type=\"password\" className=\"form-control\" placeholder=\"Confirm Password\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12 text-center\">\r\n              <button className=\"btn btn-default\" disabled={this.isFormInvalid()}>Sign Up</button>&nbsp;&nbsp;\r\n              <Link to='/'>Cancel</Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignupForm;\r\n","import React, { Component } from 'react';\r\nimport SignupForm from '../../components/SignupForm/SignupForm';\r\nimport './SignupPage.css';\r\n\r\nclass SignupPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {message: ''}\r\n  }\r\n\r\n  updateMessage = (msg) => {\r\n    this.setState({message: msg});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='SignupPage'>\r\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\r\n        <p>{this.state.message}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignupPage;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './LoginPage.css';\r\nimport userService from '../../utils/userService';\r\n\r\nclass LoginPage extends Component {\r\n\r\n  state = {\r\n    email: '',\r\n    pw: ''\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      // Using ES2015 Computed Property Names\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await userService.login(this.state);\r\n      // Let <App> know a user has signed up!\r\n      this.props.handleSignupOrLogin();\r\n      // Successfully signed up - show GamePage\r\n      this.props.history.push('/');\r\n    } catch (err) {\r\n      // Invalid user data (probably duplicate email)\r\n      // this.props.updateMessage(err.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"LoginPage\">\r\n        <header className=\"header-footer\">Log In</header>\r\n        <form className=\"form-horizontal\" onSubmit={this.handleSubmit} >\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12\">\r\n              <input type=\"email\" className=\"form-control\" placeholder=\"Email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12\">\r\n              <input type=\"password\" className=\"form-control\" placeholder=\"Password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"col-sm-12 text-center\">\r\n              <button className=\"btn btn-default\">Log In</button>&nbsp;&nbsp;&nbsp;\r\n              <Link to='/'>Cancel</Link>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport GamePage from '../../pages/GamePage/GamePage';\r\nimport SettingsPage from '../SettingsPage/SettingsPage';\r\nimport HighScoresPage from '../HighScoresPage/HighScoresPage';\r\nimport SignupPage from '../SignupPage/SignupPage';\r\nimport LoginPage from '../LoginPage/LoginPage';\r\nimport scoresService from '../../utils/scoresService';\r\nimport userService from '../../utils/userService';\r\n\r\nconst colors = {\r\n  Easy: ['#7CCCE5', '#FDE47F', '#E04644', '#B576AD'],\r\n  Moderate: ['#7CCCE5', '#FDE47F', '#E04644', '#B576AD', '#B7D968'],\r\n  Difficult: ['#7CCCE5', '#FDE47F', '#E04644', '#B576AD', '#B7D968', '#555E7B']\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      ...this.getInitialState(),\r\n      difficulty: 'Easy',\r\n      scores: [],\r\n      user: userService.getUser()\r\n    };\r\n  }\r\n  handleLogout = () => {\r\n    userService.logout();\r\n    this.setState({ user: null });\r\n  }\r\n  handleSignupOrLogin = () => {\r\n    this.setState({ user: userService.getUser() });\r\n  }\r\n  getInitialState() {\r\n    return {\r\n      selColorIdx: 0,\r\n      guesses: [this.getNewGuess()],\r\n      code: this.genCode(),\r\n      elapsedTime: 0,\r\n      isTiming: true\r\n    };\r\n  }\r\n\r\n  getNewGuess() {\r\n    return {\r\n      code: [null, null, null, null],\r\n      score: {\r\n        perfect: 0,\r\n        almost: 0\r\n      }\r\n    };\r\n  }\r\n\r\n  genCode() {\r\n    let numColors = this.state && colors[this.state.difficulty].length;\r\n    numColors = numColors || 4;\r\n    return new Array(4).fill().map(dummy => Math.floor(Math.random() * numColors));\r\n  }\r\n\r\n  getWinTries() {\r\n    // if winner, return num guesses, otherwise 0 (no winner)\r\n    let lastGuess = this.state.guesses.length - 1;\r\n    return this.state.guesses[lastGuess].score.perfect === 4 ? lastGuess + 1 : 0;\r\n  }\r\n\r\n  isHighScore = (guessesCopy) => {\r\n    let lastScore = this.state.scores[this.state.scores.length - 1];\r\n    return (guessesCopy.length < lastScore.numGuesses || (\r\n      guessesCopy.length === lastScore.numGuesses &&\r\n      this.state.elapsedTime < lastScore.seconds\r\n    ));\r\n  }\r\n\r\n  /*--- Callback Methods ---*/\r\n\r\n  handleTimerUpdate = () => {\r\n    this.setState((curState) => ({ elapsedTime: ++curState.elapsedTime }));\r\n  }\r\n\r\n  handleDifficultyChange = (level) => {\r\n    // Use callback to ensure level is updated BEFORE calling handleNewGameClick\r\n    this.setState({ difficulty: level }, () => this.handleNewGameClick());\r\n  }\r\n\r\n  handleColorSelection = (colorIdx) => {\r\n    this.setState({ selColorIdx: colorIdx });\r\n  }\r\n\r\n  handleNewGameClick = () => {\r\n    this.setState(this.getInitialState());\r\n  }\r\n\r\n  handlePegClick = (pegIdx) => {\r\n    // Get index of last guess object\r\n    let currentGuessIdx = this.state.guesses.length - 1;\r\n\r\n    // Always replace objects/arrays with NEW ones\r\n    let guessesCopy = [...this.state.guesses];\r\n    let guessCopy = { ...guessesCopy[currentGuessIdx] };\r\n    let codeCopy = [...guessCopy.code];\r\n\r\n    // Update the NEW code array with the currently selected color\r\n    codeCopy[pegIdx] = this.state.selColorIdx;\r\n\r\n    // Update the NEW guess object\r\n    guessCopy.code = codeCopy;\r\n\r\n    // Update the NEW guesses array\r\n    guessesCopy[currentGuessIdx] = guessCopy;\r\n\r\n    // Update state with the NEW guesses array\r\n    this.setState({\r\n      guesses: guessesCopy\r\n    });\r\n  }\r\n\r\n  handleScoreClick = () => {\r\n    // Need the index of the current guess object (last object in guesses array)\r\n    let currentGuessIdx = this.state.guesses.length - 1;\r\n\r\n    // Create \"working\" copies of the \"guessed\" code and the secret\r\n    // code so that we can modify them as we compute the number of\r\n    // perfect and almost without messing up the actual ones in state\r\n    let guessCodeCopy = [...this.state.guesses[currentGuessIdx].code];\r\n    let secretCodeCopy = [...this.state.code];\r\n\r\n    let perfect = 0, almost = 0;\r\n\r\n    // First pass computes number of \"perfect\"\r\n    guessCodeCopy.forEach((code, idx) => {\r\n      if (secretCodeCopy[idx] === code) {\r\n        perfect++;\r\n        // Ensure same choice is not matched again\r\n        // by updating both elements in the \"working\"\r\n        // arrays to null\r\n        guessCodeCopy[idx] = secretCodeCopy[idx] = null;\r\n      }\r\n    });\r\n\r\n    // Second pass computes number of \"almost\"\r\n    guessCodeCopy.forEach((code, idx) => {\r\n      if (code === null) return;\r\n      let foundIdx = secretCodeCopy.indexOf(code);\r\n      if (foundIdx > -1) {\r\n        almost++;\r\n        // Again, ensure same choice is not matched again\r\n        secretCodeCopy[foundIdx] = null;\r\n      }\r\n    });\r\n\r\n    // State must only be updated with NEW objects/arrays\r\n    // Always replace objects/arrays with NEW ones\r\n    let guessesCopy = [...this.state.guesses];\r\n    let guessCopy = { ...guessesCopy[currentGuessIdx] };\r\n    let scoreCopy = { ...guessCopy.score };\r\n\r\n    scoreCopy.perfect = perfect;\r\n    scoreCopy.almost = almost;\r\n    guessCopy.score = scoreCopy;\r\n    guessesCopy[currentGuessIdx] = guessCopy;\r\n\r\n    if (perfect === 4) {\r\n      // Chicken dinner - need to stop the timer!\r\n      this.setState(state => ({ isTiming: false }), async function () {\r\n        // Do high-score logic in this callback\r\n        if ((this.state.scores.length < 20 || this.isHighScore(guessesCopy))) {\r\n          let initials = prompt('Congrats you have a top-20 score! Enter your initials: ').substr(0, 3);\r\n          await scoresService.create({ initials, numGuesses: guessesCopy.length, seconds: this.state.elapsedTime });\r\n          this.props.history.push('/high-scores');\r\n        }\r\n      });\r\n    } else {\r\n      guessesCopy.push(this.getNewGuess());\r\n    }\r\n\r\n    this.setState({\r\n      guesses: guessesCopy,\r\n      // This is a great way to update isTiming\r\n      isTiming: perfect !== 4\r\n    });\r\n  }\r\n\r\n  handleUpdateScores = (scores) => {\r\n    this.setState({ scores });\r\n  }\r\n\r\n  /*--- Lifecycle Methods ---*/\r\n\r\n  async componentDidMount() {\r\n    const scores = await scoresService.index();\r\n    this.setState({ scores });\r\n  }\r\n\r\n  render() {\r\n    let winTries = this.getWinTries();\r\n    return (\r\n      <div>\r\n        <header className='header-footer'>R E A C T &nbsp;&nbsp;&nbsp;  M A S T E R M I N D</header>\r\n        <Switch>\r\n          <Route exact path='/' render={() =>\r\n            <GamePage\r\n              user={this.state.user}\r\n              handleLogout={this.handleLogout}\r\n              winTries={winTries}\r\n              colors={colors[this.state.difficulty]}\r\n              selColorIdx={this.state.selColorIdx}\r\n              guesses={this.state.guesses}\r\n              elapsedTime={this.state.elapsedTime}\r\n              isTiming={this.state.isTiming}\r\n              handleColorSelection={this.handleColorSelection}\r\n              handleNewGameClick={this.handleNewGameClick}\r\n              handlePegClick={this.handlePegClick}\r\n              handleScoreClick={this.handleScoreClick}\r\n              handleTimerUpdate={this.handleTimerUpdate}\r\n            />\r\n          } />\r\n          <Route exact path='/settings' render={props =>\r\n            <SettingsPage\r\n              {...props}\r\n              colorsLookup={colors}\r\n              difficulty={this.state.difficulty}\r\n              handleDifficultyChange={this.handleDifficultyChange}\r\n            />\r\n          } />\r\n          <Route exact path='/signup' render={({ history }) =>\r\n            <SignupPage\r\n              history={history}\r\n              handleSignupOrLogin={this.handleSignupOrLogin}\r\n\r\n            />\r\n          } />\r\n          <Route exact path='/login' render={(props) =>\r\n            <LoginPage\r\n              handleSignupOrLogin={this.handleSignupOrLogin}\r\n              {...props}\r\n\r\n\r\n            />\r\n          } />\r\n          <Route exact path='/high-scores' render={() =>\r\n            <HighScoresPage\r\n              scores={this.state.scores}\r\n              handleUpdateScores={this.handleUpdateScores}\r\n            />\r\n          } />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './pages/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <Router><Route component={App}/></Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}